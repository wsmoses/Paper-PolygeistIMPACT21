@article{feautrier2011polyhedron,
  title={Polyhedron Model.},
  author={Feautrier, Paul and Lengauer, Christian},
  journal={Encyclopedia of parallel computing},
  volume={3},
  pages={1581--1591},
  year={2011}
}

@online{polybench,
  title={PolyBench/C 4.2.1},
  author={Pouchet, Louis-No\"el and Yuki, Tomofumi},
  url={https://sourceforge.net/projects/polybench/files/},
}

@article{grosser.ppl.2012,
  title={Polly—performing polyhedral optimizations on a low-level intermediate representation},
  author={Grosser, Tobias and Groesslinger, Armin and Lengauer, Christian},
  journal={Parallel Processing Letters},
  volume={22},
  number={04},
  pages={1250010},
  year={2012},
  publisher={World Scientific}
}

@article{Bondhugula2008Pluto,
  title = {A {{Practical Automatic Polyhedral Parallelizer}} and {{Locality Optimizer}}},
  volume = {43},
  timestamp = {2017-04-19T08:23:23Z},
  number = {6},
  urldate = {2016-03-14},
  journal = {ACM SIGPLAN Notices},
  author = {Bondhugula, Uday and Hartono, Albert and Ramanujam, Jagannathan and Sadayappan, Ponnuswamy},
  year = {2008},
  pages = {101--113},
}

@misc{pocc,
    title = {The Polyhedral Compiler Collection},
    author = {PoCC},
    url = {https://sourceforge.net/projects/pocc/},
    accessed = {2020},
    year = {2020},
    note = "{Online; accessed on December 2020}"
}

@inproceedings{pet,
  title={Polyhedral extraction tool},
  author={Verdoolaege, Sven and Grosser, Tobias},
  booktitle={Second International Workshop on Polyhedral Compilation Techniques (IMPACT’12), Paris, France},
  volume={141},
  year={2012}
}

@misc{bastoul2008clan,
  title={Clan-a polyhedral representation extractor for high level programs},
  author={Bastoul, C{\'e}dric},
  year={2008},
  publisher={May}
}

@inproceedings{pop2006graphite,
  title={GRAPHITE: Polyhedral analyses and optimizations for GCC},
  author={Pop, Sebastian and Cohen, Albert and Bastoul, C{\'e}dric and Girbal, Sylvain and Silber, Georges-Andr{\'e} and Vasilache, Nicolas},
  booktitle={Proceedings of the 2006 GCC Developers Summit},
  pages={2006},
  year={2006},
}

@inproceedings{cloog,
  title={Code generation in the polyhedral model is easier than you think},
  author={Bastoul, Cedric},
  booktitle={Proceedings. 13th International Conference on Parallel Architecture and Compilation Techniques, 2004. PACT 2004.},
  pages={7--16},
  year={2004},
  organization={IEEE}
}

@inproceedings{razanajato2017splitting,
  title={Splitting Polyhedra to Generate More Efficient Code},
  author={Razanajato, Harenome and Loechner, Vincent and Bastoul, C{\'e}dric},
  booktitle={International Workshop on Polyhedral Compilation Techniques (IMPACT), 2017.},
  year={2017}
}

@article{grosser2015polyhedral,
  title={Polyhedral AST generation is more than scanning polyhedra},
  author={Grosser, Tobias and Verdoolaege, Sven and Cohen, Albert},
  journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume={37},
  number={4},
  pages={1--50},
  year={2015},
  publisher={ACM New York, NY, USA}
}

@misc{mlir,
      title={MLIR: A Compiler Infrastructure for the End of Moore's Law}, 
      author={Chris Lattner and Mehdi Amini and Uday Bondhugula and Albert Cohen and Andy Davis and Jacques Pienaar and River Riddle and Tatiana Shpeisman and Nicolas Vasilache and Oleksandr Zinenko},
      year={2020},
      eprint={2002.11054},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@inproceedings{llvm,
  title={LLVM: A compilation framework for lifelong program analysis \& transformation},
  author={Lattner, Chris and Adve, Vikram},
  booktitle={International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages={75--86},
  year={2004},
  organization={IEEE}
}

@article{tc,
  title={The next 700 accelerated layers: From mathematical expressions of network computation graphs to accelerated GPU kernels, automatically},
  author={Vasilache, Nicolas and Zinenko, Oleksandr and Theodoridis, Theodoros and Goyal, Priya and Devito, Zachary and Moses, William S and Verdoolaege, Sven and Adams, Andrew and Cohen, Albert},
  journal={ACM Transactions on Architecture and Code Optimization (TACO)},
  volume={16},
  number={4},
  pages={1--26},
  year={2019},
  publisher={ACM New York, NY, USA}
}

% isn't there an impact pub ? no just the project. we did not write any paper on that. tc-cim is different.
@online{teckyl,
  author = {Andi Drebes},
  title = {Teckyl: An MLIR frontend for Tensor Operations},
  year = {2020},
  url = {https://github.com/andidr/teckyl},
  urldate = {2020-12-03}
}

@inproceedings{flang,
  title={An MLIR dialect for high-level optimization of {Fortran}},
  author={Eric Schweitz},
  booktitle={2019 LLVM Developers Meeting},
  year={2019}
}

@inproceedings{tc_cim,
  title={TC-CIM: Empowering Tensor Comprehensions for Computing-In-Memory},
  author={Drebes, Andi and Chelini, Lorenzo and Zinenko, Oleksandr and Cohen, Albert and Corporaal, Henk and Grosser, Tobias and Vadivel, Kanishkan and Vasilache, Nicolas},
  booktitle={IMPACT 2020-10th International Workshop on Polyhedral Compilation Techniques},
  year={2020}
}

@article{mullapudi2015polymage,
  title={Polymage: Automatic optimization for image processing pipelines},
  author={Mullapudi, Ravi Teja and Vasista, Vinay and Bondhugula, Uday},
  journal={ACM SIGARCH Computer Architecture News},
  volume={43},
  number={1},
  pages={429--443},
  year={2015},
  publisher={ACM New York, NY, USA}
}

@inproceedings{cerebras_chip,
  title={Generating SIMD Instructions for Cerebras CS-1 using Polyhedral Compilation Techniques},
  author={Verdoolaege Sven and Kudlur,  Manjunath and Kamepalli, Harinath and Schreiber, Rob},
    booktitle={IMPACT 2020-10th International Workshop on Polyhedral Compilation Techniques},
  year={2020}
}

@inproceedings{isl,
  title={isl: An integer set library for the polyhedral model},
  author={Verdoolaege, Sven},
  booktitle={International Congress on Mathematical Software},
  pages={299--302},
  year={2010},
  organization={Springer}
}

@article{ppcg,
  title={Polyhedral parallel code generation for CUDA},
  author={Verdoolaege, Sven and Carlos Juega, Juan and Cohen, Albert and Ignacio Gomez, Jose and Tenllado, Christian and Catthoor, Francky},
  journal={ACM Transactions on Architecture and Code Optimization (TACO)},
  volume={9},
  number={4},
  pages={1--23},
  year={2013},
  publisher={ACM New York, NY, USA}
}

@online{mlir_rationale,
  author = {MLIR Developers},
  title = {MLIR Rationale},
  year = 2020,
  url = {https://mlir.llvm.org/docs/Rationale/Rationale/}
}

@inproceedings{10.1145/2751205.2751248,
author = {Grosser, Tobias and Ramanujam, J. and Pouchet, Louis-Noel and Sadayappan, P. and Pop, Sebastian},
title = {Optimistic Delinearization of Parametrically Sized Arrays},
year = {2015},
isbn = {9781450335591},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2751205.2751248},
doi = {10.1145/2751205.2751248},
abstract = {A number of legacy codes make use of linearized array references (i.e., references to one-dimensional arrays) to encode accesses to multi-dimensional arrays. This is also true of a number of optimized libraries and the well-known LLVM intermediate representation, which linearize array accesses. In many cases, the only information available is an array base pointer and a single dimensional offset. For problems with parametric array extents, this offset is usually a multivariate polynomial. Compiler analyses such as data dependence analysis are impeded because the standard formulations with integer linear programming (ILP) solvers cannot be used. In this paper, we present an approach to delinearization, i.e., recovering the multi-dimensional nature of accesses to arrays of parametric size. In case of insufficient static information, the developed algorithm produces run-time conditions to validate the recovered multi-dimensional form. The obtained access description enhances the precision of data dependence analysis. Experimental evaluation in the context of the LLVM/Polly system using a number of benchmarks reveals significant performance benefits due to increased precision of dependence analysis and enhanced optimization opportunities that are exploited by the compiler after delinearization.},
booktitle = {Proceedings of the 29th ACM on International Conference on Supercomputing},
pages = {351–360},
numpages = {10},
keywords = {linear memory layout, multi-dimensional arrays, polyhedral analysis},
location = {Newport Beach, California, USA},
series = {ICS '15}
}



@inproceedings{komisarczyk2020pet,
  title={PET-to-MLIR: A polyhedral front-end for MLIR},
  author={Komisarczyk, Konrad and Chelini, Lorenzo and Vadivel, Kanishkan and Jordans, Roel and Corporaal, Henk},
  booktitle={2020 23rd Euromicro Conference on Digital System Design (DSD)},
  pages={551--556},
  year={2020},
  organization={IEEE}
}

@online{npcomp,
    author = {npcomp developers},
    title = {MLIR npcomp},
    year = 2020,
    url = {https://github.com/llvm/mlir-npcomp}
}

@inproceedings{comet,
    author = {Erdal Mutlu and Ruiqin Tian and Bin Ren and Sriram Krishnamoorthy and Roberto Gioiosa and Jacques Pienaar and Gokcen Kestor},
    title = {COMET: A Domain-Specific Compilation of High-Performance Computational Chemistry},
    booktitle = {The 33rd Workshop on Languages and Compilers for Parallel Computing},
    year = {2020},
}

@online{mlir_simplified_polyhedral,
  author = {MLIR Developers},
  title = {MLIR: A Case for a Simplified Polyhedral Form},
  year = 2020,
  url = {https://mlir.llvm.org/docs/Rationale/RationaleSimplifiedPolyhedralForm/}
}

@online{mlir_affine,
  author = {MLIR Developers},
  title = {MLIR Affine dialect},
  year = 2020,
  url = {https://mlir.llvm.org/docs/Dialects/Affine/}
}

@online{linalg,
  author = {Vasilache, Nicolas and Zinenko, Oleksandr and Cohen, Albert},
  title = {Linalg Dialect Rationale: The Case For Compiler-Friendly Custom Operations},
  year = 2020,
  url = {https://mlir.llvm.org/docs/Rationale/RationaleLinalgDialect/}
}

@misc{polylib,
  title={{PolyLib}: A library for manipulating parameterized polyhedra},
  author={Loechner, Vincent},
  year={1999}
}

@inproceedings{tensorflow,
  title={Tensorflow: A system for large-scale machine learning},
  author={Abadi, Mart{\'\i}n and Barham, Paul and Chen, Jianmin and Chen, Zhifeng and Davis, Andy and Dean, Jeffrey and Devin, Matthieu and Ghemawat, Sanjay and Irving, Geoffrey and Isard, Michael and others},
  booktitle={12th $\{$USENIX$\}$ symposium on operating systems design and implementation ({OSDI} 16)},
  pages={265--283},
  year={2016}
}

@online{tensorflow_mlir,
  author = {TensorFlow Developers},
  title = {MLIR-HLO: A Standalone "HLO" MLIR-based Compiler},
  year = {2020},
  url = {https://github.com/tensorflow/mlir-hlo}
}

@techreport{openscop,
  title={Openscop: A specification and a library for data exchange in polyhedral compilation tools},
  author={Bastoul, C{\'e}dric},
  institution={Paris-Sud University},
  volume={9},
  year={2011}
}

@article{ssa,
  title={Efficiently computing static single assignment form and the control dependence graph},
  author={Cytron, Ron and Ferrante, Jeanne and Rosen, Barry K and Wegman, Mark N and Zadeck, F Kenneth},
  journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume={13},
  number={4},
  pages={451--490},
  year={1991},
  publisher={ACM New York, NY, USA}
}

@article{appel1998ssa,
  title={SSA is functional programming},
  author={Appel, Andrew W},
  journal={ACM SIGPLAN Notices},
  volume={33},
  number={4},
  pages={17--20},
  year={1998},
  publisher={ACM New York, NY, USA}
}

@online{circt,
  author = {CIRCT Developers},
  title = {CIRCT Charter},
  year = {2020},
  url = {https://github.com/llvm/circt/blob/master/docs/Charter.md}
}

@inproceedings{yang2011finding,
  title={Finding and understanding bugs in C compilers},
  author={Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
  booktitle={Proceedings of the 32nd ACM SIGPLAN conference on Programming language design and implementation},
  pages={283--294},
  year={2011}
}

@inproceedings{delinearization,
  title={Optimistic delinearization of parametrically sized arrays},
  author={Grosser, Tobias and Ramanujam, Jagannathan and Pouchet, Louis-Noel and Sadayappan, Ponnuswamy and Pop, Sebastian},
  booktitle={Proceedings of the 29th ACM on International Conference on Supercomputing},
  pages={351--360},
  year={2015}
}

@Inbook{rstream,
author="Meister, Benoit
and Vasilache, Nicolas
and Wohlford, David
and Baskaran, Muthu Manikandan
and Leung, Allen
and Lethin, Richard",
editor="Padua, David",
title="R-Stream Compiler",
bookTitle="Encyclopedia of Parallel Computing",
year="2011",
publisher="Springer US",
address="Boston, MA",
pages="1756--1765",
isbn="978-0-387-09766-4",
doi="10.1007/978-0-387-09766-4_515",
url="https://doi.org/10.1007/978-0-387-09766-4_515"
}

@INPROCEEDINGS{ibmxl_polyhedral,
  author={U. {Bondhugula} and S. {Dash} and O. {Gunluk} and L. {Renganarayanan}},
  booktitle={2010 19th International Conference on Parallel Architectures and Compilation Techniques (PACT)}, 
  title={A model for fusion and code motion in an automatic parallelizing compiler}, 
  year={2010},
  pages={343-352},}
  
@inproceedings{pencil,
  title={Pencil: A platform-neutral compute intermediate language for accelerator programming},
  author={Baghdadi, Riyadh and Beaugnon, Ulysse and Cohen, Albert and Grosser, Tobias and Kruse, Michael and Reddy, Chandan and Verdoolaege, Sven and Betts, Adam and Donaldson, Alastair F and Ketema, Jeroen and others},
  booktitle={2015 International Conference on Parallel Architecture and Compilation (PACT)},
  pages={138--149},
  year={2015},
  organization={IEEE}
}

@inproceedings{verdoolaege2016live,
  title={Live-range reordering},
  author={Verdoolaege, Sven and Cohen, Albert},
  booktitle={International Workshop on Polyhedral Compilation Techniques},
  year={2016},
}

@inproceedings{schedule_trees,
  title={Schedule trees},
  author={Verdoolaege, Sven and Guelton, Serge and Grosser, Tobias and Cohen, Albert},
  booktitle={International Workshop on Polyhedral Compilation Techniques},
  year={2014}
}

@inproceedings{csmith,
  title={Finding and understanding bugs in C compilers},
  author={Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
  booktitle={Proceedings of the 32nd ACM SIGPLAN conference on Programming language design and implementation},
  pages={283--294},
  year={2011}
}

@inproceedings{delicm,
  title={DeLICM: scalar dependence removal at zero memory cost},
  author={Kruse, Michael and Grosser, Tobias},
  booktitle={Proceedings of the 2018 International Symposium on Code Generation and Optimization},
  pages={241--253},
  year={2018}
}

@inproceedings{array_expansion,
author = {Feautrier, Paul},
title = {Array Expansion},
year = {1988},
isbn = {9781450328401},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
booktitle = {ACM International Conference on Supercomputing 25th Anniversary Volume},
pages = {99–111},
numpages = {13},
location = {Munich, Germany}
}

